{"ast":null,"code":"import { onMounted, ref } from \"vue\";\n// import { useStore } from \"vuex\";\nimport axios from \"axios\";\n\n// const store = useStore();\n\nexport default {\n  __name: 'TasksList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const tasks = ref({});\n\n    // function inc() {\n    //   store.dispatch(\"tasks/inc\");\n    //   console.log(store.state.tasks.checkoutStatus);\n    // }\n\n    onMounted(() => {\n      axios.get(\"/api/tasks\").then(res => {\n        tasks.value = res.data.tasks;\n      });\n    });\n\n    // count: computed(() => store.state.count),\n    // evenOrOdd: computed(() => store.getters.evenOrOdd),\n    // increment: () => store.dispatch('increment'),\n    // decrement: () => store.dispatch('decrement'),\n    // incrementIfOdd: () => store.dispatch('incrementIfOdd'),\n    // incrementAsync: () => store.dispatch('incrementAsync')\n\n    const __returned__ = {\n      tasks,\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","axios","tasks","get","then","res","value","data"],"sources":["/home/me/Workspace/tasks-app/src/components/TasksList.vue"],"sourcesContent":["<template>\n  <div class=\"bg-gray-50 h-screen p-6\">\n    <h1 class=\"text-3xl text-gray-800 pb-8\">Task List</h1>\n\n    <div class=\"flex items-center justify-between py-6\">\n      <p class=\"text-sm text-gray-600\">{{ tasks.length }} Tasks</p>\n      <button\n        class=\"text-base text-blue-950 bg-blue-200 rounded-lg border border-blue-950 py-1 px-3\"\n      >\n        New Task\n      </button>\n    </div>\n\n    <table class=\"w-4/5\">\n      <thead>\n        <tr>\n          <td class=\"w-1/3\">Title</td>\n          <td class=\"w-1/4\">Schedule</td>\n          <td class=\"w-1/4\">Status</td>\n          <td class=\"w-1/6\"></td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"task in tasks\" :key=\"task\">\n          <td class=\"w-1/3\">{{ task.title }}</td>\n          <td class=\"w-1/4\">{{ task.schedule }}</td>\n          <td class=\"w-1/4\">{{ task.status }}</td>\n          <td class=\"w-1/6\">...</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\";\n// import { useStore } from \"vuex\";\nimport axios from \"axios\";\n\n// const store = useStore();\nconst tasks = ref({});\n\n// function inc() {\n//   store.dispatch(\"tasks/inc\");\n//   console.log(store.state.tasks.checkoutStatus);\n// }\n\nonMounted(() => {\n  axios.get(\"/api/tasks\").then((res) => {\n    tasks.value = res.data.tasks;\n  });\n});\n\n// count: computed(() => store.state.count),\n// evenOrOdd: computed(() => store.getters.evenOrOdd),\n// increment: () => store.dispatch('increment'),\n// decrement: () => store.dispatch('decrement'),\n// incrementIfOdd: () => store.dispatch('incrementIfOdd'),\n// incrementAsync: () => store.dispatch('incrementAsync')\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"],"mappings":"AAmCA,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC,CAAC;;IAErB;IACA;IACA;IACA;;IAEAD,SAAS,CAAC,MAAM;MACdE,KAAK,CAACE,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACpCH,KAAK,CAACI,KAAK,GAAGD,GAAG,CAACE,IAAI,CAACL,KAAK;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
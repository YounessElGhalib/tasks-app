{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nconst state = () => ({\n  tasks_list: []\n});\nconst getters = {};\nconst actions = {\n  getTasksList({\n    commit\n  }) {\n    axios.get(\"/api/tasks\").then(res => {\n      commit(\"setTasks\", res.data.tasks);\n    });\n  },\n  addNewTask({\n    commit\n  }, payload) {\n    axios.post(\"/api/new-task\", payload).then(res => {\n      commit(\"addNewTask\", res.data);\n      return res.data;\n    });\n  },\n  updateTask({\n    commit\n  }, payload) {\n    axios.put(\"/api/update-task/\" + payload.id, payload).then(res => {\n      commit(\"updateTask\", res.data);\n      return res.data;\n    });\n  }\n};\nconst mutations = {\n  setTasks(state, tasks) {\n    state.tasks_list = tasks;\n  },\n  addNewTask(state, task) {\n    state.tasks_list.push(task);\n  },\n  updateTask(state, task) {\n    let idx = state.tasks_list.findIndex(el => el.id === task.id);\n    state.tasks_list[idx] = task;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","tasks_list","getters","actions","getTasksList","commit","get","then","res","data","tasks","addNewTask","payload","post","updateTask","put","id","mutations","setTasks","task","push","idx","findIndex","el","namespaced"],"sources":["/home/me/Workspace/tasks-app/src/store/modules/tasks.js"],"sourcesContent":["import axios from \"axios\";\n\nconst state = () => ({\n  tasks_list: [],\n});\n\nconst getters = {};\n\nconst actions = {\n  getTasksList({ commit }) {\n    axios.get(\"/api/tasks\").then((res) => {\n      commit(\"setTasks\", res.data.tasks);\n    });\n  },\n  addNewTask({ commit }, payload) {\n    axios.post(\"/api/new-task\", payload).then((res) => {\n      commit(\"addNewTask\", res.data);\n      return res.data;\n    });\n  },\n  updateTask({ commit }, payload) {\n    axios.put(\"/api/update-task/\" + payload.id, payload).then((res) => {\n      commit(\"updateTask\", res.data);\n      return res.data;\n    });\n  },\n};\n\nconst mutations = {\n  setTasks(state, tasks) {\n    state.tasks_list = tasks;\n  },\n  addNewTask(state, task) {\n    state.tasks_list.push(task);\n  },\n  updateTask(state, task) {\n    let idx = state.tasks_list.findIndex((el) => el.id === task.id);\n    state.tasks_list[idx] = task;\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGA,CAAA,MAAO;EACnBC,UAAU,EAAE;AACd,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAG,CAAC,CAAC;AAElB,MAAMC,OAAO,GAAG;EACdC,YAAYA,CAAC;IAAEC;EAAO,CAAC,EAAE;IACvBN,KAAK,CAACO,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACpCH,MAAM,CAAC,UAAU,EAAEG,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;EACDC,UAAUA,CAAC;IAAEN;EAAO,CAAC,EAAEO,OAAO,EAAE;IAC9Bb,KAAK,CAACc,IAAI,CAAC,eAAe,EAAED,OAAO,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAK;MACjDH,MAAM,CAAC,YAAY,EAAEG,GAAG,CAACC,IAAI,CAAC;MAC9B,OAAOD,GAAG,CAACC,IAAI;IACjB,CAAC,CAAC;EACJ,CAAC;EACDK,UAAUA,CAAC;IAAET;EAAO,CAAC,EAAEO,OAAO,EAAE;IAC9Bb,KAAK,CAACgB,GAAG,CAAC,mBAAmB,GAAGH,OAAO,CAACI,EAAE,EAAEJ,OAAO,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAK;MACjEH,MAAM,CAAC,YAAY,EAAEG,GAAG,CAACC,IAAI,CAAC;MAC9B,OAAOD,GAAG,CAACC,IAAI;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,MAAMQ,SAAS,GAAG;EAChBC,QAAQA,CAAClB,KAAK,EAAEU,KAAK,EAAE;IACrBV,KAAK,CAACC,UAAU,GAAGS,KAAK;EAC1B,CAAC;EACDC,UAAUA,CAACX,KAAK,EAAEmB,IAAI,EAAE;IACtBnB,KAAK,CAACC,UAAU,CAACmB,IAAI,CAACD,IAAI,CAAC;EAC7B,CAAC;EACDL,UAAUA,CAACd,KAAK,EAAEmB,IAAI,EAAE;IACtB,IAAIE,GAAG,GAAGrB,KAAK,CAACC,UAAU,CAACqB,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACP,EAAE,KAAKG,IAAI,CAACH,EAAE,CAAC;IAC/DhB,KAAK,CAACC,UAAU,CAACoB,GAAG,CAAC,GAAGF,IAAI;EAC9B;AACF,CAAC;AAED,eAAe;EACbK,UAAU,EAAE,IAAI;EAChBxB,KAAK;EACLE,OAAO;EACPC,OAAO;EACPc;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
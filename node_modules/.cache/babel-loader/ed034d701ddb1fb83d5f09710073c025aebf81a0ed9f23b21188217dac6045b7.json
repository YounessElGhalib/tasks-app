{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// initial state\n// shape: [{ id, quantity }]\nconst state = () => ({\n  items: [],\n  checkoutStatus: null\n});\n\n// getters\nconst getters = {\n  cartTotalPrice: (state, getters) => {\n    return getters.cartProducts.reduce((total, product) => {\n      return total + product.price * product.quantity;\n    }, 0);\n  }\n};\n\n// actions\nconst actions = {\n  inc() {\n    console.log(\"hahahah...\");\n  },\n  async checkout({\n    commit,\n    state\n  }, products) {\n    const savedCartItems = [...state.items];\n    commit(\"setCheckoutStatus\", null);\n    // empty cart\n    commit(\"setCartItems\", {\n      items: []\n    });\n    try {\n      await shop.buyProducts(products);\n      commit(\"setCheckoutStatus\", \"successful\");\n    } catch (e) {\n      console.error(e);\n      commit(\"setCheckoutStatus\", \"failed\");\n      // rollback to the cart saved before sending the request\n      commit(\"setCartItems\", {\n        items: savedCartItems\n      });\n    }\n  }\n};\n\n// mutations\nconst mutations = {\n  pushProductToCart(state, {\n    id\n  }) {\n    state.items.push({\n      id,\n      quantity: 1\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["state","items","checkoutStatus","getters","cartTotalPrice","cartProducts","reduce","total","product","price","quantity","actions","inc","console","log","checkout","commit","products","savedCartItems","shop","buyProducts","e","error","mutations","pushProductToCart","id","push","namespaced"],"sources":["/home/me/Workspace/tasks-app/src/store/modules/tasks.js"],"sourcesContent":["// initial state\n// shape: [{ id, quantity }]\nconst state = () => ({\n  items: [],\n  checkoutStatus: null,\n});\n\n// getters\nconst getters = {\n  cartTotalPrice: (state, getters) => {\n    return getters.cartProducts.reduce((total, product) => {\n      return total + product.price * product.quantity;\n    }, 0);\n  },\n};\n\n// actions\nconst actions = {\n  inc() {\n    console.log(\"hahahah...\");\n  },\n  async checkout({ commit, state }, products) {\n    const savedCartItems = [...state.items];\n    commit(\"setCheckoutStatus\", null);\n    // empty cart\n    commit(\"setCartItems\", { items: [] });\n    try {\n      await shop.buyProducts(products);\n      commit(\"setCheckoutStatus\", \"successful\");\n    } catch (e) {\n      console.error(e);\n      commit(\"setCheckoutStatus\", \"failed\");\n      // rollback to the cart saved before sending the request\n      commit(\"setCartItems\", { items: savedCartItems });\n    }\n  },\n};\n\n// mutations\nconst mutations = {\n  pushProductToCart(state, { id }) {\n    state.items.push({\n      id,\n      quantity: 1,\n    });\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"],"mappings":";AAAA;AACA;AACA,MAAMA,KAAK,GAAGA,CAAA,MAAO;EACnBC,KAAK,EAAE,EAAE;EACTC,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA,MAAMC,OAAO,GAAG;EACdC,cAAc,EAAEA,CAACJ,KAAK,EAAEG,OAAO,KAAK;IAClC,OAAOA,OAAO,CAACE,YAAY,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAK;MACrD,OAAOD,KAAK,GAAGC,OAAO,CAACC,KAAK,GAAGD,OAAO,CAACE,QAAQ;IACjD,CAAC,EAAE,CAAC,CAAC;EACP;AACF,CAAC;;AAED;AACA,MAAMC,OAAO,GAAG;EACdC,GAAGA,CAAA,EAAG;IACJC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B,CAAC;EACD,MAAMC,QAAQA,CAAC;IAAEC,MAAM;IAAEhB;EAAM,CAAC,EAAEiB,QAAQ,EAAE;IAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGlB,KAAK,CAACC,KAAK,CAAC;IACvCe,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC;IACjC;IACAA,MAAM,CAAC,cAAc,EAAE;MAAEf,KAAK,EAAE;IAAG,CAAC,CAAC;IACrC,IAAI;MACF,MAAMkB,IAAI,CAACC,WAAW,CAACH,QAAQ,CAAC;MAChCD,MAAM,CAAC,mBAAmB,EAAE,YAAY,CAAC;IAC3C,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVR,OAAO,CAACS,KAAK,CAACD,CAAC,CAAC;MAChBL,MAAM,CAAC,mBAAmB,EAAE,QAAQ,CAAC;MACrC;MACAA,MAAM,CAAC,cAAc,EAAE;QAAEf,KAAK,EAAEiB;MAAe,CAAC,CAAC;IACnD;EACF;AACF,CAAC;;AAED;AACA,MAAMK,SAAS,GAAG;EAChBC,iBAAiBA,CAACxB,KAAK,EAAE;IAAEyB;EAAG,CAAC,EAAE;IAC/BzB,KAAK,CAACC,KAAK,CAACyB,IAAI,CAAC;MACfD,EAAE;MACFf,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAe;EACbiB,UAAU,EAAE,IAAI;EAChB3B,KAAK;EACLG,OAAO;EACPQ,OAAO;EACPY;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}